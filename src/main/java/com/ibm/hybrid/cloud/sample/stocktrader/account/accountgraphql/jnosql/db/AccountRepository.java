package com.ibm.hybrid.cloud.sample.stocktrader.account.accountgraphql.jnosql.db;

import com.groocraft.couchdb.slacker.annotation.Query;
import com.ibm.hybrid.cloud.sample.stocktrader.account.accountgraphql.json.Account;
import org.springframework.data.repository.PagingAndSortingRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.graphql.data.method.annotation.QueryMapping;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface AccountRepository extends PagingAndSortingRepository<Account, String> {

    // Adding the specific @Query is much more efficient than the autogenerated version which uses the query:
    // {"limit":10000, "selector": "$or": {"$in": ["Ryan"]}}
    // Or the equivalent. This reduced query times from 10s-60s to 4-5ms
    @Query("{\"limit\":10000,\"selector\":{\"owner\": {\"$eq\": :owner}}}")
    List<Account> findByOwner(@Param("owner") String owner);

    List<Account> findByOwnerIn(List<String> owner);
}
